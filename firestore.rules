rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    function isPremium() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isPremium == true;
    }

    // Users collection - Secure user data
    match /users/{userId} {
      allow read: if isAuthenticated() && (isOwner(userId) || isPremium());
      allow create: if isAuthenticated() && isOwner(userId);
      allow update: if isAuthenticated() && isOwner(userId);
      allow delete: if false; // Prevent accidental deletion
    }

    // Events collection - Public read, admin write
    match /events/{eventId} {
      allow read: if true; // Public events
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && 
        (resource.data.createdBy == request.auth.uid || isPremium());
      allow delete: if false; // Soft delete only
    }

    // Chat sessions - User-owned data
    match /chatSessions/{sessionId} {
      allow read: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
      allow delete: if false;

      // Messages subcollection
      match /messages/{messageId} {
        allow read: if isAuthenticated() && 
          get(/databases/$(database)/documents/chatSessions/$(sessionId)).data.userId == request.auth.uid;
        allow create: if isAuthenticated() && 
          get(/databases/$(database)/documents/chatSessions/$(sessionId)).data.userId == request.auth.uid;
        allow update: if false; // Messages are immutable
        allow delete: if false;
      }
    }

    // Analytics - Write only, no read
    match /analytics/{document=**} {
      allow read: if false;
      allow write: if isAuthenticated();
    }

    // Cache collection - System use only
    match /cache/{document=**} {
      allow read: if isAuthenticated();
      allow write: if false; // Only backend can write
    }

    // Premium subscriptions - Secure financial data
    match /subscriptions/{subscriptionId} {
      allow read: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
      allow create: if false; // Only backend via Stripe
      allow update: if false; // Only backend via Stripe  
      allow delete: if false;
    }

    // Messages collection for global chat
    match /messages/{messageId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid &&
        request.resource.data.timestamp == request.time;
      allow update: if false;
      allow delete: if false;
    }
  }
}