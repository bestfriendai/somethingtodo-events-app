rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isImageFile() {
      return request.resource.contentType.matches('image/.*');
    }
    
    function isValidSize() {
      return request.resource.size < 10 * 1024 * 1024; // 10MB max
    }
    
    // User profile images
    match /users/{userId}/profile/{fileName} {
      allow read: if true; // Public profile images
      allow write: if isAuthenticated() && 
        isOwner(userId) && 
        isImageFile() && 
        isValidSize();
      allow delete: if isAuthenticated() && isOwner(userId);
    }
    
    // Event images (admin only write)
    match /events/{eventId}/{fileName} {
      allow read: if true; // Public event images
      allow write: if false; // Admin only through Cloud Functions
    }
    
    // Chat attachments
    match /chat/{sessionId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && 
        isImageFile() && 
        isValidSize();
      allow delete: if false;
    }
    
    // Temporary uploads
    match /temp/{userId}/{fileName} {
      allow read: if isAuthenticated() && isOwner(userId);
      allow write: if isAuthenticated() && 
        isOwner(userId) && 
        isValidSize();
      allow delete: if isAuthenticated() && isOwner(userId);
    }
    
    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }
  }
}